{
  "file_regex": "^.*\\.py$",
  "name": "python_repl",
  "selector": "source.python",
  "target": "python_repl",
  "variants": [
    {
      "name": "[python] repl",
      // command will be splitted by space and used as list
      // If you need spaces in command line - use `args` or use `command` as list
      "command": "$REPL_PYTHON -i",
      "args": ["$file"],
    },
    {
      "name": "[poetry] repl",
      // this one will detect poetry from replbuild.poetryPath (project or common)
      "command": "$REPL_POETRY run python -i",
      "args": ["$file"],
    },
    {
      "name": "[poetry] pytest",
      // this one will just run system poetry
      "command": "poetry run pytest -vvv -s",
      "args": ["$file"],
    },
    {
      "name": "[poetry] pytest with approvals update",
      "command": "poetry run pytest -vvv -s",
      "args": [
        "--approvals-update",
        "--playwright-mocks-update",
        "--reproduces-update",
        "--mocks-update",
        "$file",
      ],
    },
    {
      "name": "[poetry] pytest exit_first",
      "command": "poetry run pytest -vvv -s --exitfirst",
      "args": ["$file"],
    },
    {
      "name": "[poetry] pytest collect_only",
      "command": "poetry run pytest -vvv -s --collect-only",
      "args": ["$file"],
    },
    {
      "name": "[poetry] install",
      "command": "poetry install",
    },
    {
      "name": "[poetry] env info",
      "command": "poetry env info",
    },
  ],
}
